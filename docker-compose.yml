services:
  api:
    build:
      context: ./api
      dockerfile: web/Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - postgres
      - qdrant
    environment:
      - CLIENT_URL=http://localhost
      - PRODUCTION=true

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rag_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "80:80"

  migrations:
    build:
      context: ./api
      dockerfile: RAGNet.Infrastructure/Persistence/Dockerfile
      target: migrations
    depends_on:
      - postgres
  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
volumes:
  postgres_data:
  qdrant_data:
