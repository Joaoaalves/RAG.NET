services:
  api:
    build:
      context: ./api
      dockerfile: web/Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_started
      qdrant:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
        restart: true
    environment:
      - CLIENT_URL=http://localhost
      - PRODUCTION=true

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rag_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "80:80"

  migrations:
    build:
      context: ./api
      dockerfile: RAGNet.Infrastructure/Persistence/Dockerfile
      target: migrations
    depends_on:
      - postgres
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rag_user
      RABBITMQ_DEFAULT_PASS: rag_password
    volumes:
      - ./certs:/certs:ro
  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
volumes:
  rabbitmq_data:
  postgres_data:
  qdrant_data:
